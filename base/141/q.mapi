{
    "title": "@141 Estrutura de Dados e Algoritmos Ementa    ",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@141 Estrutura de Dados e Algoritmos Ementa </title>\n  <style>\n    html {\n      line-height: 1.5;\n      font-family: Georgia, serif;\n      font-size: 20px;\n      color: #1a1a1a;\n      background-color: #fdfdfd;\n    }\n    body {\n      margin: 0 auto;\n      max-width: 36em;\n      padding-left: 50px;\n      padding-right: 50px;\n      padding-top: 50px;\n      padding-bottom: 50px;\n      hyphens: auto;\n      word-wrap: break-word;\n      text-rendering: optimizeLegibility;\n      font-kerning: normal;\n    }\n    @media (max-width: 600px) {\n      body {\n        font-size: 0.9em;\n        padding: 1em;\n      }\n    }\n    @media print {\n      body {\n        background-color: transparent;\n        color: black;\n        font-size: 12pt;\n      }\n      p, h2, h3 {\n        orphans: 3;\n        widows: 3;\n      }\n      h2, h3, h4 {\n        page-break-after: avoid;\n      }\n    }\n    p {\n      margin: 1em 0;\n    }\n    a {\n      color: #1a1a1a;\n    }\n    a:visited {\n      color: #1a1a1a;\n    }\n    img {\n      max-width: 100%;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      margin-top: 1.4em;\n    }\n    h5, h6 {\n      font-size: 1em;\n      font-style: italic;\n    }\n    h6 {\n      font-weight: normal;\n    }\n    ol, ul {\n      padding-left: 1.7em;\n      margin-top: 1em;\n    }\n    li > ol, li > ul {\n      margin-top: 0;\n    }\n    blockquote {\n      margin: 1em 0 1em 1.7em;\n      padding-left: 1em;\n      border-left: 2px solid #e6e6e6;\n      color: #606060;\n    }\n    code {\n      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;\n      font-size: 85%;\n      margin: 0;\n    }\n    pre {\n      margin: 1em 0;\n      overflow: auto;\n    }\n    pre code {\n      padding: 0;\n      overflow: visible;\n    }\n    .sourceCode {\n     background-color: transparent;\n     overflow: visible;\n    }\n    hr {\n      background-color: #1a1a1a;\n      border: none;\n      height: 1px;\n      margin: 1em 0;\n    }\n    table {\n      margin: 1em 0;\n      border-collapse: collapse;\n      width: 100%;\n      overflow-x: auto;\n      display: block;\n      font-variant-numeric: lining-nums tabular-nums;\n    }\n    table caption {\n      margin-bottom: 0.75em;\n    }\n    tbody {\n      margin-top: 0.5em;\n      border-top: 1px solid #1a1a1a;\n      border-bottom: 1px solid #1a1a1a;\n    }\n    th {\n      border-top: 1px solid #1a1a1a;\n      padding: 0.25em 0.5em 0.25em 0.5em;\n    }\n    td {\n      padding: 0.125em 0.5em 0.25em 0.5em;\n    }\n    header {\n      margin-bottom: 4em;\n      text-align: center;\n    }\n    #TOC li {\n      list-style: none;\n    }\n    #TOC a:not(:hover) {\n      text-decoration: none;\n    }\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"estrutura-de-dados-e-algoritmos-ementa-ready\"><span class=\"citation\" data-cites=\"141\">@141</span> Estrutura de Dados e Algoritmos Ementa #ready</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<h2 id=\"objetivos\">Objetivos</h2>\n<ul>\n<li>Entender Complexidade</li>\n<li>Saber as vantagens e a desvantagem de cada estrutura e as varia\u00e7\u00f5es de implementa\u00e7\u00e3o.</li>\n<li>Ter contato com recurs\u00e3o e tipos de algoritmos recursivos.</li>\n<li>Construir as estruturas de dados em baixo n\u00edvel\n<ul>\n<li>Array Din\u00e2mico (vector)</li>\n<li>Lista\n<ul>\n<li>Sobre vetor: buffer, ring list</li>\n<li>Ligada: Simples, Lista Dupla, Lista Circular</li>\n</ul></li>\n<li>Stack e Queue</li>\n<li>Hash</li>\n<li>\u00c1rvore Bin\u00e1ria e Bin\u00e1ria de Busca</li>\n<li>\u00c1rvore N-\u00e1ria</li>\n</ul></li>\n<li>Conhecer os algoritmos de busca e ordena\u00e7\u00e3o</li>\n<li>Saber utilizar as estruturas de alto n\u00edvel oferecidas pela linguagem\n<ul>\n<li>vector</li>\n<li>list, stack, queue</li>\n<li>map (tree and hash)</li>\n<li>Ser capaz de manipular as estruturas (percorrer, inserir, remover, buscar)</li>\n</ul></li>\n<li>Resolver problemas que exigem o uso dessas estruturas</li>\n</ul>\n<h2 id=\"introdu\u00e7\u00e3o-ao-c\">Introdu\u00e7\u00e3o ao C++</h2>\n<ul>\n<li>Classes</li>\n<li>Operador de refer\u00eancia e ponteiros</li>\n<li>Construtores e destrutores</li>\n<li>Sobrecarga de operadores</li>\n</ul>\n<h2 id=\"vis\u00e3o-superior\">Vis\u00e3o superior</h2>\n<ul>\n<li>Introdu\u00e7\u00e3o \u00e0s estruturas em alto n\u00edvel\n<ul>\n<li>Exemplo da utiliza\u00e7\u00e3o de cada estrutura (vector, list, set)</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Compara\u00e7\u00e3o de Desempenho (inser\u00e7\u00e3o, remo\u00e7\u00e3o, busca) TODO\n<ul>\n<li>estruturas: vector ordenado, list ordenado, set</li>\n</ul></li>\n</ul></li>\n</ul>\n<h2 id=\"complexidade\">Complexidade</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Entender melhor, pior e caso m\u00e9dio</li>\n<li>Saber contar o n\u00famero de instru\u00e7\u00f5es</li>\n<li>Saber comparar as ordens de Complexidade</li>\n<li>Compreender o significa de O(N)</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Lista de exerc\u00edcios</li>\n</ul></li>\n</ul>\n<h2 id=\"vector\">Vector</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Compreender o funcionamento de um vector</li>\n</ul></li>\n<li>Trabalho\n<ul>\n<li>Implementar vector em C</li>\n<li>Princesa em vetor</li>\n</ul></li>\n</ul>\n<h2 id=\"recurs\u00e3o\">Recurs\u00e3o</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Aprender os fundamentos de Recurs\u00e3o.</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Recurs\u00e3o sobre vetores(min, max, soma, invers\u00e3o)</li>\n<li>Torre</li>\n<li>Desenho de fractais em C, C++ ou Python</li>\n<li>Matrizes:\n<ul>\n<li>Preenchimento recursivo</li>\n<li>Recursivo aleat\u00f3rio</li>\n<li>Criar labirinto</li>\n<li>Encontrar caminho</li>\n</ul></li>\n</ul></li>\n</ul>\n<h2 id=\"busca-e-ordena\u00e7\u00e3o\">Busca e Ordena\u00e7\u00e3o</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>M\u00e9todos de <strong>ordena\u00e7\u00e3o</strong>\n<ul>\n<li>Bubble, Insert, Selection (lineares)</li>\n<li>Merge, Quick (recursivos)</li>\n</ul></li>\n<li>Compreender e implementar os m\u00e9todos de <strong>busca</strong> em VETOR\n<ul>\n<li>Busca Sequ\u00eancial, Bin\u00e1ria. TODO</li>\n</ul></li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Implementa\u00e7\u00e3o</li>\n</ul></li>\n</ul>\n<h2 id=\"lista-encadeada\">Lista Encadeada</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Compreender a estrutura e fundamentos das listas</li>\n<li>Lista implementada sobre vetor: pilha, buffer</li>\n<li>lista limples (interativa e recursiva)\n<ul>\n<li>lista ordenada</li>\n<li>lista circular</li>\n</ul></li>\n<li>lista dupla</li>\n</ul></li>\n<li>C++\n<ul>\n<li>list</li>\n<li>std::find</li>\n<li>iteradores</li>\n<li>construindo iterador para lista circular TODO</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Implementa\u00e7\u00f5es de lista</li>\n<li>Implementar Princesa com lista circular</li>\n<li>Simula\u00e7\u00e3o Banc\u00e1ria TODO</li>\n<li>Editor de Texto TODO</li>\n</ul></li>\n</ul>\n<h2 id=\"pilha\">Pilha</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Utiliza\u00e7\u00e3o de pilha como alternativa \u00e0 recurs\u00e3o</li>\n<li>Estudar alguns algoritmos de pilha</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Calcular parenteses e palindromes</li>\n<li>Criar labirinto com pilha</li>\n<li>Resolver labirinto com pilha TODO</li>\n</ul></li>\n</ul>\n<h2 id=\"filas\">Filas</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Utiliza\u00e7\u00e3o da fila como alternativa \u00e0 recurs\u00e3o</li>\n<li>Estudar alguns algoritmos de fila</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Implementar preenchimento de imagens com fila (floodfill)</li>\n<li>Encontrar menor caminho entre dois pontos (pathfinding)</li>\n</ul></li>\n</ul>\n<h2 id=\"hash\">Hash</h2>\n<ul>\n<li>Objetivos\n<ul>\n<li>Compreender diferen\u00e7as entre a implementa\u00e7\u00e3o em \u00e1rvore, vetor e hash.</li>\n<li>Aprender o funcionamento do hash\n<ul>\n<li>hash com lista</li>\n<li>hash com linear probing</li>\n<li>hash com quadratic probing</li>\n</ul></li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Implementacao das estruturas</li>\n<li>Contagem de palavras no texto utilizando hash</li>\n</ul></li>\n</ul>\n<h2 id=\"\u00e1rvores-requisito-lista\">\u00c1rvores (Requisito Lista)</h2>\n<ul>\n<li>Aprender os fundamentos de \u00e1rvore como extens\u00e3o de lista\n<ul>\n<li>\u00c1rvore Bin\u00e1ria Pura\n<ul>\n<li>opera\u00e7\u00f5es(buscas, min, max, soma, altura, largura)</li>\n</ul></li>\n<li>\u00c1rvore Bin\u00e1ria de Busca\n<ul>\n<li>opera\u00e7\u00f5es(buscas, min, max, soma, altura, largura)</li>\n</ul></li>\n<li>\u00c1rvore Heap (TALVEZ)</li>\n</ul></li>\n<li>Trabalhos\n<ul>\n<li>Jogo da Velha ou Soma 15 TODO</li>\n<li>Implementa\u00e7\u00e3o da Bin\u00e1ria</li>\n<li>\u00c1rvore de express\u00e3o</li>\n<li>\u00c1rvore de Decis\u00e3o TODO</li>\n</ul></li>\n</ul>\n</body>\n</html>\n",
    "executionFiles": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "requiredFile": null
}
