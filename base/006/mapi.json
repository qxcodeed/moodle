{
    "title": "@006 L1 - Implementando Fila com duas Pilhas",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@006 L1 - Implementando Fila com duas Pilhas</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <link rel=\"stylesheet\" href=\"/home/tiger/Dropbox/gits/0_tools/indexer/pandoc.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l1---implementando-fila-com-duas-pilhas\"><span class=\"citation\" data-cites=\"006\">@006</span> L1 - Implementando Fila com duas Pilhas</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodeed/moodle/master/base/006/__capa.jpg\" /> <strong>Descri\u00e7\u00e3o da fun\u00e7\u00e3o</strong></p>\n<p>Uma fila \u00e9 um tipo de dados abstrato que mant\u00e9m a ordem na qual os elementos foram adicionados a ela, permitindo que os elementos mais antigos sejam removidos da frente e os novos elementos sejam adicionados na parte traseira.</p>\n<p>Isso \u00e9 chamado de estrutura de dados FIFO (Primeiro a entrar, primeiro a sair), porque o primeiro elemento adicionado \u00e0 fila (ou seja, aquele que est\u00e1 esperando h\u00e1 mais tempo) \u00e9 sempre o primeiro a ser removido.</p>\n<p>Nesse desafio, voc\u00ea deve primeiro implementar uma fila usando duas pilhas. Em seguida, processe a consultas, em que cada consulta \u00e9 um dos seguintes 3 tipos:</p>\n<ul>\n<li>1 x: Enfileirar o elemento x no final da fila.</li>\n<li>2: Retirar da fila o elemento na frente da fila.</li>\n<li>3: Mostre o elemento na frente da fila.</li>\n</ul>\n<p><strong>Formato de entrada</strong></p>\n<p>A primeira linha cont\u00e9m um \u00fanico n\u00famero inteiro, q, denotando o n\u00famero de consultas. Cada linha i das q linhas subsequentes cont\u00e9m uma \u00fanica consulta no padr\u00e3o descrito acima no problema. Todas as tr\u00eas consultas come\u00e7am com um n\u00famero inteiro que indica o tipo da consulta, mas apenas a primeira consulta \u00e9 seguida por um valor adicional x separado por espa\u00e7o, indicando o valor a ser enfileirado.</p>\n<p><strong>Formato de sa\u00edda</strong></p>\n<p>Para cada consulta do tipo 3, imprima o valor do elemento na frente da fila em uma nova linha. As consultas de tipo 1 e 2 n\u00e3o necessitam imprimir nada.</p>\n<h2 id=\"ajuda\">Ajuda</h2>\n<ul>\n<li>Voc\u00ea pode utilizar duas pilhas.</li>\n<li>Vamos chamar a primeira pilha de \u201cdeposito\u201d e a segunda de \u201cprateleira\u201d.</li>\n<li>Se precisar colocar algo, voc\u00ea coloca no deposito.</li>\n<li>Se precisar pegar algo voc\u00ea pega da prateleira.</li>\n<li>Se a prateleira estiver vazia, voc\u00ea retira tudo do deposito para a prateleira.\n<ul>\n<li>Observe que agora o dep\u00f3sito foi invertido e a primeira a ser inserida no dep\u00f3sito \u00e9 a \u00faltima da prateleira.</li>\n</ul></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n9\n1 1\n1 2\n1 3\n3\n2\n3\n2\n3\n2\n========\n1\n2\n3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n10\n1 42\n2\n1 14\n3\n1 28\n3\n1 60\n1 78\n2\n2\n========\n14\n14\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n10\n1 76\n1 33\n2\n1 23\n1 97\n1 21\n3\n3\n1 74\n3\n========\n33\n33\n33\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n100\n1 92118642\n2\n1 107858633\n1 110186788\n1 883309178\n1 430939631\n2\n1 739711408\n1 803703507\n1 643797161\n1 538560826\n3\n1 595864615\n1 490282285\n1 558095366\n1 893666727\n1 595679828\n3\n1 99908215\n3\n1 333969117\n1 604624143\n1 88712599\n1 224459820\n3\n1 153072902\n3\n3\n2\n1 156974087\n2\n1 387224973\n1 154628865\n1 256130200\n1 704295204\n2\n3\n1 928499989\n2\n3\n2\n1 319507446\n1 323714081\n1 772087837\n1 350417458\n1 193303587\n1 213700781\n3\n1 565379092\n1 284925173\n2\n1 794176274\n3\n1 766929345\n3\n2\n1 42983700\n2\n1 156768862\n1 205008057\n1 93223219\n3\n2\n1 17818922\n1 917626659\n1 829031126\n1 346173907\n1 78065001\n2\n3\n2\n3\n1 565004472\n1 753139390\n2\n1 629441479\n1 935933973\n1 650043630\n3\n1 158726470\n1 206429620\n3\n1 590439448\n1 139555053\n1 78707344\n1 989497950\n1 880166047\n2\n1 137608768\n3\n1 861823671\n1 625166323\n1 431218849\n3\n1 570007363\n2\n3\n3\n2\n1 978253366\n========\n110186788\n110186788\n110186788\n110186788\n110186788\n110186788\n739711408\n803703507\n643797161\n538560826\n538560826\n490282285\n893666727\n595679828\n99908215\n99908215\n333969117\n333969117\n604624143\n604624143\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "executionFiles": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "case=\ninput=9\n1 1\n1 2\n1 3\n3\n2\n3\n2\n3\n2\noutput=\"1\n2\n3\n\"\ngrade reduction=100%\n\ncase=01\ninput=10\n1 42\n2\n1 14\n3\n1 28\n3\n1 60\n1 78\n2\n2\noutput=\"14\n14\n\"\ngrade reduction=100%\n\ncase=02\ninput=10\n1 76\n1 33\n2\n1 23\n1 97\n1 21\n3\n3\n1 74\n3\noutput=\"33\n33\n33\n\"\ngrade reduction=100%\n\ncase=03\ninput=100\n1 92118642\n2\n1 107858633\n1 110186788\n1 883309178\n1 430939631\n2\n1 739711408\n1 803703507\n1 643797161\n1 538560826\n3\n1 595864615\n1 490282285\n1 558095366\n1 893666727\n1 595679828\n3\n1 99908215\n3\n1 333969117\n1 604624143\n1 88712599\n1 224459820\n3\n1 153072902\n3\n3\n2\n1 156974087\n2\n1 387224973\n1 154628865\n1 256130200\n1 704295204\n2\n3\n1 928499989\n2\n3\n2\n1 319507446\n1 323714081\n1 772087837\n1 350417458\n1 193303587\n1 213700781\n3\n1 565379092\n1 284925173\n2\n1 794176274\n3\n1 766929345\n3\n2\n1 42983700\n2\n1 156768862\n1 205008057\n1 93223219\n3\n2\n1 17818922\n1 917626659\n1 829031126\n1 346173907\n1 78065001\n2\n3\n2\n3\n1 565004472\n1 753139390\n2\n1 629441479\n1 935933973\n1 650043630\n3\n1 158726470\n1 206429620\n3\n1 590439448\n1 139555053\n1 78707344\n1 989497950\n1 880166047\n2\n1 137608768\n3\n1 861823671\n1 625166323\n1 431218849\n3\n1 570007363\n2\n3\n3\n2\n1 978253366\noutput=\"110186788\n110186788\n110186788\n110186788\n110186788\n110186788\n739711408\n803703507\n643797161\n538560826\n538560826\n490282285\n893666727\n595679828\n99908215\n99908215\n333969117\n333969117\n604624143\n604624143\n\"\ngrade reduction=100%\n",
            "encoding": 0
        }
    ],
    "requiredFile": null
}
