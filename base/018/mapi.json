{
    "title": "@018 TODO: Build Lista Simples",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@018 TODO: Build Lista Simples</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <link rel=\"stylesheet\" href=\"/home/tiger/Dropbox/gits/0_tools/indexer/pandoc.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"todo-build-lista-simples\"><span class=\"citation\" data-cites=\"018\">@018</span> TODO: Build Lista Simples</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodeed/moodle/master/base/018/__capa.jpg\" /></p>\n<h1 id=\"implementa\u00e7\u00f5es-de-lista-encadeada\">Implementa\u00e7\u00f5es de Lista Encadeada</h1>\n<p>Vamos trabalhar com implementa\u00e7\u00f5es de listas simples e duplamente encadeadas, listas circulares.</p>\n<p>Compreender o funcionamento das <strong>listas simples</strong> \u00e9 muito importante para nos preparar para trabalhar com \u00e1rvores.</p>\n<ol type=\"1\">\n<li>Listas Simples _______________- Implemente uma <em>Lista Encadeada Simples</em> com os seguintes m\u00e9todos e teste o funcionamento da sua implementa\u00e7\u00e3o.</li>\n</ol>\n<ul>\n<li><p>criar #cria uma lista vazia criar()</p>\n<pre><code>  #cria uma lista a partir de outra\n  #n\u00e3o utilize push_back\n  #realize m O(N)\n  clone(lista)</code></pre></li>\n<li><p>inserir #insere na frente da lista void push_front(value)</p>\n<pre><code>  #insere no fim da lista\n  void push_back(value)    </code></pre></li>\n<li><p>destruir #destrutor ou equivalente destroy()</p></li>\n<li><p>remover #retira o no da frente void pop_front()</p>\n<pre><code>  #retira o no do fundo\n  void pop_back()\n\n  #retira e retorna o primeiro no com esse valor\n  node remove(value)</code></pre></li>\n<li><p>acessar #retorna o primeiro no ou nulo node front()</p>\n<pre><code>  #retorna o ultimo no ou nulo\n  node back()</code></pre></li>\n<li><p>visualizar #mostra a lista entre [ ] void print()</p>\n<pre><code>  #mostra lista ao contrario\n  void reverse_print()    </code></pre></li>\n<li><p>manipular #retorna se lista vazia bool is_empty()</p>\n<pre><code>  #se o valor existir retorne o no\n  node find(value)\n\n  #retorna o tamanho da lista\n  int size()\n\n  #verifica se duas listas s\u00e3o iguais\n  bool equals(list_other)</code></pre></li>\n</ul>\n<ol start=\"2\" type=\"1\">\n<li>Lista Simples Ordenada _____________________\u2013 Listas Ordenadas s\u00e3o muito pr\u00e1ticas por facilitar a busca de elementos na lista.</li>\n</ol>\n<p>Construa uma ListaSimplesOrdenada com os m\u00e9todos da ListaSimples e as seguintes modifica\u00e7\u00f5es.</p>\n<ul>\n<li>Remover os m\u00e9todos push_back(value) push_front(value)</li>\n<li>Adicionar os m\u00e9todos #insere o valor de forma ordenado na lista. insert(value)<br />\n</li>\n<li>Mantenha todos os outros m\u00e9todos fazendo adapta\u00e7\u00f5es quando necess\u00e1rio. Ex: o m\u00e9todo find n\u00e3o precisa mais procurar em todos os elementos.</li>\n</ul>\n<p>Nossa lista deve aceitar valores repetidos.</p>\n<ol start=\"3\" type=\"1\">\n<li>Lista Simples Circular _____________________\u2013</li>\n</ol>\n<p>Listas circulares s\u00e3o extremamente \u00fateis. Leia mais sobre Ring Buffer quando puder. Fica mais f\u00e1cil se voc\u00ea usar um node sentinela para o in\u00edcio da lista. Assim o sentinela aponta para o primeiro elemento e o \u00faltimo elemento aponta para o sentinela.</p>\n<ul>\n<li><p>M\u00e9todos a remover void push_front(value) void push_back(value) void pop_front() void pop_back() node front() node back() bool equals(list_other)</p></li>\n<li><p>M\u00e9todos a alterar node remove(value) node find(value) void print() void reverse_print()</p></li>\n<li><p>M\u00e9todos a adaptar bool is_empty() int size()</p></li>\n</ul>\n<ol start=\"4\" type=\"1\">\n<li>Listas Simples Recursiva _______________-</li>\n</ol>\n<p>Adapte os m\u00e9todos da lista simples para trabalhar apenas com recurs\u00e3o.</p>\n</body>\n</html>\n",
    "executionFiles": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "requiredFile": null
}
