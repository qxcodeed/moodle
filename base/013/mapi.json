{
    "title": "@013 L2 - Princesa V1 - Implementa\u00e7\u00e3o usando o std::list",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@013 L2 - Princesa V1 - Implementa\u00e7\u00e3o usando o std::list</title>\n  <style>\n    html {\n      line-height: 1.5;\n      font-family: Georgia, serif;\n      font-size: 20px;\n      color: #1a1a1a;\n      background-color: #fdfdfd;\n    }\n    body {\n      margin: 0 auto;\n      max-width: 36em;\n      padding-left: 50px;\n      padding-right: 50px;\n      padding-top: 50px;\n      padding-bottom: 50px;\n      hyphens: auto;\n      word-wrap: break-word;\n      text-rendering: optimizeLegibility;\n      font-kerning: normal;\n    }\n    @media (max-width: 600px) {\n      body {\n        font-size: 0.9em;\n        padding: 1em;\n      }\n    }\n    @media print {\n      body {\n        background-color: transparent;\n        color: black;\n        font-size: 12pt;\n      }\n      p, h2, h3 {\n        orphans: 3;\n        widows: 3;\n      }\n      h2, h3, h4 {\n        page-break-after: avoid;\n      }\n    }\n    p {\n      margin: 1em 0;\n    }\n    a {\n      color: #1a1a1a;\n    }\n    a:visited {\n      color: #1a1a1a;\n    }\n    img {\n      max-width: 100%;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      margin-top: 1.4em;\n    }\n    h5, h6 {\n      font-size: 1em;\n      font-style: italic;\n    }\n    h6 {\n      font-weight: normal;\n    }\n    ol, ul {\n      padding-left: 1.7em;\n      margin-top: 1em;\n    }\n    li > ol, li > ul {\n      margin-top: 0;\n    }\n    blockquote {\n      margin: 1em 0 1em 1.7em;\n      padding-left: 1em;\n      border-left: 2px solid #e6e6e6;\n      color: #606060;\n    }\n    code {\n      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;\n      font-size: 85%;\n      margin: 0;\n    }\n    pre {\n      margin: 1em 0;\n      overflow: auto;\n    }\n    pre code {\n      padding: 0;\n      overflow: visible;\n    }\n    .sourceCode {\n     background-color: transparent;\n     overflow: visible;\n    }\n    hr {\n      background-color: #1a1a1a;\n      border: none;\n      height: 1px;\n      margin: 1em 0;\n    }\n    table {\n      margin: 1em 0;\n      border-collapse: collapse;\n      width: 100%;\n      overflow-x: auto;\n      display: block;\n      font-variant-numeric: lining-nums tabular-nums;\n    }\n    table caption {\n      margin-bottom: 0.75em;\n    }\n    tbody {\n      margin-top: 0.5em;\n      border-top: 1px solid #1a1a1a;\n      border-bottom: 1px solid #1a1a1a;\n    }\n    th {\n      border-top: 1px solid #1a1a1a;\n      padding: 0.25em 0.5em 0.25em 0.5em;\n    }\n    td {\n      padding: 0.125em 0.5em 0.25em 0.5em;\n    }\n    header {\n      margin-bottom: 4em;\n      text-align: center;\n    }\n    #TOC li {\n      list-style: none;\n    }\n    #TOC a:not(:hover) {\n      text-decoration: none;\n    }\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l2---princesa-v1---implementa\u00e7\u00e3o-usando-o-stdlist\"><span class=\"citation\" data-cites=\"013\">@013</span> L2 - Princesa V1 - Implementa\u00e7\u00e3o usando o std::list</h2>\n<p><a href=\"https://www.youtube.com/watch?v=uCsD3ZGzMgE\"><img src=\"https://raw.githubusercontent.com/qxcodeed/moodle/master/base/013/__capa.jpg\" /></a></p>\n<p>Um problema bem interessante e antigo da matem\u00e1tica \u00e9 conhecido como Josephus Problem. No link da imagem voc\u00ea pode, por curiosidades aprender bastantes sobre ele e o modelo matem\u00e1tico que se prop\u00f5e a model\u00e1-lo.</p>\n<p>Nosso objetivo aqui ser\u00e1 apenas implementar seu funcionamento.</p>\n<hr />\n<p>No problema, <strong>N</strong> pessoas se colocam numa fila circular e assumem valores de 1 at\u00e9 <strong>N</strong>. Um n\u00famero <strong>E</strong> \u00e9 escolhido para iniciar o jogo. <strong>E</strong> pega a espada, mata o elemento \u00e0 sua frente e passa a espada uma posi\u00e7\u00e3o \u00e0 frente. O jogo continua at\u00e9 que um \u00fanico elemento permane\u00e7a vivo.</p>\n<hr />\n<ul>\n<li>Entrada:\n<ul>\n<li>Os valores de <strong>N</strong> e <strong>E</strong> na primeira linha.</li>\n</ul></li>\n<li>Sa\u00edda:\n<ul>\n<li>Etapa a etapa, os elementos que est\u00e3o vivos na fila circular, indicando com um &gt; quem est\u00e1 com a espada.</li>\n</ul></li>\n</ul>\n<hr />\n<h2 id=\"implementa\u00e7\u00e3o-usando-listas\">Implementa\u00e7\u00e3o usando listas</h2>\n<p>Resolva novamente o problema utilizando - a lista do c++ para colocar os elementos - um iterator para rastrear a posi\u00e7\u00e3o da espada - o m\u00e9todo erase da lista para matar os elementos</p>\n<h2 id=\"ajuda\">Ajuda</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode cpp\"><code class=\"sourceCode cpp\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//uma lista de inteiros pode ser criada com</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>list&lt;<span class=\"dt\">int</span>&gt; lista;</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//a lista possui fun\u00e7\u00f5es para inserir ou remover do come\u00e7o ou do fim</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista.push_front(<span class=\"dv\">4</span>);</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista.push_back(<span class=\"dv\">5</span>);</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista.pop_front();</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista.pop_back();</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//containers em c++ possui iteradores que s\u00e3o classes </span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//que servem pra percorrer as estrururas de dados</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//elas funcionam com uma sintaxe parecida com ponteiros</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//it aponta para o primeiro elemento v\u00e1lido da lista</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//list&lt;list&gt;::iterator \u00e9 o tipo de dado</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>list&lt;list&gt;::iterator it = lista.begin();</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//andar para o pr\u00f3ximo elemento da lista pode ser feito com</span></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>it++;</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//andar pra tr\u00e1s com </span></span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>it--;</span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//lista.end() aponta para o n\u00f3 de marca\u00e7\u00e3o no fim da lista, </span></span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//que \u00e9 um n\u00f3 depois do \u00faltimo v\u00e1lido</span></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//D\u00e1 pra percorrer imprimindo usando iteradores tamb\u00e9m</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span>(<span class=\"kw\">auto</span> it = lista.begin(); it != lista.end(); ++it)</span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    cout &lt;&lt; *it;</span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//para remover um elemento voce usa a opera\u00e7\u00e3o erase</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//ela apaga o n\u00f3 que est\u00e1 sob o iterador e retorna o n\u00f3</span></span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//que ficou no lugar dele</span></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>it = lista.erase(it);</span></code></pre></div>\n<hr />\n<p>Testes:</p>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n3 1\n========\n[ 1&gt; 2 3 ]\n[ 1 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n3 2\n========\n[ 1 2&gt; 3 ]\n[ 1&gt; 2 ]\n[ 1&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n3 3\n========\n[ 1 2 3&gt; ]\n[ 2&gt; 3 ]\n[ 2&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n6 3\n========\n[ 1 2 3&gt; 4 5 6 ]\n[ 1 2 3 5&gt; 6 ]\n[ 1&gt; 2 3 5 ]\n[ 1 3&gt; 5 ]\n[ 1&gt; 3 ]\n[ 1&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05\n9 9\n========\n[ 1 2 3 4 5 6 7 8 9&gt; ]\n[ 2&gt; 3 4 5 6 7 8 9 ]\n[ 2 4&gt; 5 6 7 8 9 ]\n[ 2 4 6&gt; 7 8 9 ]\n[ 2 4 6 8&gt; 9 ]\n[ 2&gt; 4 6 8 ]\n[ 2 6&gt; 8 ]\n[ 2&gt; 6 ]\n[ 2&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06\n20 1\n========\n[ 1&gt; 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3&gt; 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5&gt; 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7&gt; 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9&gt; 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11&gt; 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13&gt; 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15&gt; 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17&gt; 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17 19&gt; 20 ]\n[ 1&gt; 3 5 7 9 11 13 15 17 19 ]\n[ 1 5&gt; 7 9 11 13 15 17 19 ]\n[ 1 5 9&gt; 11 13 15 17 19 ]\n[ 1 5 9 13&gt; 15 17 19 ]\n[ 1 5 9 13 17&gt; 19 ]\n[ 1&gt; 5 9 13 17 ]\n[ 1 9&gt; 13 17 ]\n[ 1 9 17&gt; ]\n[ 9&gt; 17 ]\n[ 9&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n</code></pre>\n</body>\n</html>\n",
    "executionFiles": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "case=01\ninput=3 1\noutput=\"[ 1> 2 3 ]\n[ 1 3> ]\n[ 3> ]\n\"\ngrade reduction=100%\n\ncase=02\ninput=3 2\noutput=\"[ 1 2> 3 ]\n[ 1> 2 ]\n[ 1> ]\n\"\ngrade reduction=100%\n\ncase=03\ninput=3 3\noutput=\"[ 1 2 3> ]\n[ 2> 3 ]\n[ 2> ]\n\"\ngrade reduction=100%\n\ncase=04\ninput=6 3\noutput=\"[ 1 2 3> 4 5 6 ]\n[ 1 2 3 5> 6 ]\n[ 1> 2 3 5 ]\n[ 1 3> 5 ]\n[ 1> 3 ]\n[ 1> ]\n\"\ngrade reduction=100%\n\ncase=05\ninput=9 9\noutput=\"[ 1 2 3 4 5 6 7 8 9> ]\n[ 2> 3 4 5 6 7 8 9 ]\n[ 2 4> 5 6 7 8 9 ]\n[ 2 4 6> 7 8 9 ]\n[ 2 4 6 8> 9 ]\n[ 2> 4 6 8 ]\n[ 2 6> 8 ]\n[ 2> 6 ]\n[ 2> ]\n\"\ngrade reduction=100%\n\ncase=06\ninput=20 1\noutput=\"[ 1> 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3> 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5> 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7> 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9> 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11> 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13> 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15> 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17> 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17 19> 20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n\"\ngrade reduction=100%\n",
            "encoding": 0
        }
    ],
    "requiredFile": null
}
