{
    "title": "@005 L1 - Opera\u00e7\u00f5es b\u00e1sicas",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@005 L1 - Opera\u00e7\u00f5es b\u00e1sicas</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <link rel=\"stylesheet\" href=\"/home/tiger/Dropbox/gits/0_tools/indexer/pandoc.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l1---opera\u00e7\u00f5es-b\u00e1sicas\"><span class=\"citation\" data-cites=\"005\">@005</span> L1 - Opera\u00e7\u00f5es b\u00e1sicas</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodeed/moodle/master/base/005/__capa.jpg\" /></p>\n<p>Leia um vetor de inteiros e implemente as fun\u00e7\u00f5es sem utilizar la\u00e7o para iterar sobre os elementos. Voc\u00ea pode utilizar la\u00e7o para ler os elementos do vetor.</p>\n<hr />\n<ul>\n<li>Entrada\n<ul>\n<li>um vetor de inteiros. O vetor tem no m\u00ednimo 1 elemento.</li>\n</ul></li>\n<li>Sa\u00edda\n<ul>\n<li>vet: o vetor</li>\n<li>rvet: o vetor impresso ao contr\u00e1rio</li>\n<li>sum: a soma dos elementos</li>\n<li>mult: a multiplica\u00e7\u00e3o dos elementos</li>\n<li>min: o menor elemento</li>\n<li>inv: inverte o vetor, depois imprime ele invertido</li>\n</ul></li>\n</ul>\n<hr />\n<h2 id=\"help\">Help</h2>\n<p>Em C e C++, pode ler a entrada de dados dessa forma. Ele vai ler inteiros at\u00e9 chegar ao final do arquivo de entrada. Se tiver digitando os valores utilize:</p>\n<ul>\n<li>Linux(Enter + Ctrl D)</li>\n<li>Windows (Ctrl Z)</li>\n</ul>\n<p>para enviar um sinal de fim de arquivo.</p>\n<h3 id=\"c\">C</h3>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//c</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> vet[<span class=\"dv\">1000</span>];</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> size = <span class=\"dv\">0</span>;</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> value = <span class=\"dv\">0</span>;</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//enquanto conseguir ler valores antes de chegar no fim do arquivo</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span>(scanf(<span class=\"st\">&quot;%d&quot;</span>, &amp;value) &gt; <span class=\"dv\">0</span>) </span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    vet[size++] = value;</span></code></pre></div>\n<h3 id=\"c-1\">C++</h3>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode cpp\"><code class=\"sourceCode cpp\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;sstream&gt;</span><span class=\"pp\"> </span><span class=\"co\">//stringstream</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>string line;</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>getline(cin, line);</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>stringstream ss(line);</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>vector&lt;<span class=\"dt\">int</span>&gt; vet;</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> value;</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span>(ss &gt;&gt; value)</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    vet.push_back(value);</span></code></pre></div>\n<hr />\n<h2 id=\"testes\">Testes</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n4\n========\nvet : [ 4 ]\nrvet: [ 4 ]\nsum : 4\nmult: 4\nmin : 4\ninv : [ 4 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n3 4 2\n========\nvet : [ 3 4 2 ]\nrvet: [ 2 4 3 ]\nsum : 9\nmult: 24\nmin : 2\ninv : [ 2 4 3 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n1 2 3 4\n========\nvet : [ 1 2 3 4 ]\nrvet: [ 4 3 2 1 ]\nsum : 10\nmult: 24\nmin : 1\ninv : [ 4 3 2 1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n1 2 3 4 0\n========\nvet : [ 1 2 3 4 0 ]\nrvet: [ 0 4 3 2 1 ]\nsum : 10\nmult: 0\nmin : 0\ninv : [ 0 4 3 2 1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05\n1 2 3 4 2 3\n========\nvet : [ 1 2 3 4 2 3 ]\nrvet: [ 3 2 4 3 2 1 ]\nsum : 15\nmult: 144\nmin : 1\ninv : [ 3 2 4 3 2 1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06\n1 2 3 4 7 2 9\n========\nvet : [ 1 2 3 4 7 2 9 ]\nrvet: [ 9 2 7 4 3 2 1 ]\nsum : 28\nmult: 3024\nmin : 1\ninv : [ 9 2 7 4 3 2 1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 07\n0 1 2 3 -4 -7 -2\n========\nvet : [ 0 1 2 3 -4 -7 -2 ]\nrvet: [ -2 -7 -4 3 2 1 0 ]\nsum : -7\nmult: 0\nmin : -7\ninv : [ -2 -7 -4 3 2 1 0 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n</body>\n</html>\n",
    "executionFiles": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "case=01\ninput=4\noutput=\"vet : [ 4 ]\nrvet: [ 4 ]\nsum : 4\nmult: 4\nmin : 4\ninv : [ 4 ]\n\"\ngrade reduction=100%\n\ncase=02\ninput=3 4 2\noutput=\"vet : [ 3 4 2 ]\nrvet: [ 2 4 3 ]\nsum : 9\nmult: 24\nmin : 2\ninv : [ 2 4 3 ]\n\"\ngrade reduction=100%\n\ncase=03\ninput=1 2 3 4\noutput=\"vet : [ 1 2 3 4 ]\nrvet: [ 4 3 2 1 ]\nsum : 10\nmult: 24\nmin : 1\ninv : [ 4 3 2 1 ]\n\"\ngrade reduction=100%\n\ncase=04\ninput=1 2 3 4 0\noutput=\"vet : [ 1 2 3 4 0 ]\nrvet: [ 0 4 3 2 1 ]\nsum : 10\nmult: 0\nmin : 0\ninv : [ 0 4 3 2 1 ]\n\"\ngrade reduction=100%\n\ncase=05\ninput=1 2 3 4 2 3\noutput=\"vet : [ 1 2 3 4 2 3 ]\nrvet: [ 3 2 4 3 2 1 ]\nsum : 15\nmult: 144\nmin : 1\ninv : [ 3 2 4 3 2 1 ]\n\"\ngrade reduction=100%\n\ncase=06\ninput=1 2 3 4 7 2 9\noutput=\"vet : [ 1 2 3 4 7 2 9 ]\nrvet: [ 9 2 7 4 3 2 1 ]\nsum : 28\nmult: 3024\nmin : 1\ninv : [ 9 2 7 4 3 2 1 ]\n\"\ngrade reduction=100%\n\ncase=07\ninput=0 1 2 3 -4 -7 -2\noutput=\"vet : [ 0 1 2 3 -4 -7 -2 ]\nrvet: [ -2 -7 -4 3 2 1 0 ]\nsum : -7\nmult: 0\nmin : -7\ninv : [ -2 -7 -4 3 2 1 0 ]\n\"\ngrade reduction=100%\n",
            "encoding": 0
        }
    ],
    "requiredFile": null
}
